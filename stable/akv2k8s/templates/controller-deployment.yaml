{{- if .Values.controller.enabled -}}
{{- $dot := . }}
{{- $keyVaultAuth := default .Values.global.keyVaultAuth .Values.controller.keyVaultAuth }}
{{- $useCloudConfig := eq $keyVaultAuth "azureCloudConfig" }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akv2k8s.controller.fullname" . }}
  labels:
    {{- include "akv2k8s.labels" . | nindent 4 }}
    {{- if .Values.controller.labels }}
    {{ toYaml .Values.controller.labels | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "akv2k8s.selectors" . | nindent 6 }}
      {{- include "akv2k8s.components.controller" . | nindent 6 }}
  {{- if .Values.controller.strategy }}
  strategy:
    {{- if eq .Values.controller.strategy.type "Recreate" }}
      type: "Recreate"
    {{- else if .Values.controller.strategy.rollingUpdate }}
    rollingUpdate:
    {{- toYaml .Values.controller.strategy.rollingUpdate | nindent 6 }}
    {{- end }}
  {{- end }}
  template:
    metadata:
      {{- if .Values.controller.podAnnotations }}
      annotations:
      {{ toYaml .Values.controller.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        {{- include "akv2k8s.selectors" . | nindent 8 }}
        {{- include "akv2k8s.components.controller" . | nindent 8 }}
        {{- if .Values.controller.podLabels }}
        {{ toYaml .Values.controller.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.controller.priorityClassName }}
      priorityClassName: {{ .Values.controller.priorityClassName | indent 4}}
      {{- end }}
      automountServiceAccountToken: {{ .Values.controller.automountServiceAccountToken }}
      {{- if .Values.controller.podSecurityContext }}
      securityContext:
        {{ toYaml .Values.controller.podSecurityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "controller.serviceAccountName" . }}
      containers:
      - name: {{ .Values.controller.name }}
        image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        {{- if or .Values.global.envFromSecret .Values.controller.envFromSecret }}
        envFrom:
          {{- range $secretRef := .Values.controller.envFromSecret}}
          - secretRef:
              name: {{ $secretRef.name }}
          {{- end }}
          {{- range $secretRef := .Values.global.envFromSecret}}
          - secretRef:
              name: {{ $secretRef.name }}
          {{- end }}
        {{- end }}
        env:
        - name: AUTH_TYPE
          value: {{ $keyVaultAuth }}
        - name: METRICS_ENABLED
          value: {{ default .Values.global.metrics.enabled .Values.controller.metrics.enabled | quote }}
        - name: HTTP_PORT
          value: {{ .Values.controller.service.internalHttpPort | quote }}
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- range $key, $value := .Values.global.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
        {{- range $key, $value := .Values.controller.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.controller.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
        args:
          - "--cloudconfig={{ .Values.cloudConfig }}"
          - "--version={{ .Values.controller.image.tag }}"
          - "--v={{ template "controller.logLevel" . }}"
          - "--logging-format={{ template "controller.logFormat" . }}"
          - "--watch-all-namespaces={{ .Values.watchAllNamespaces }}"
          - "--kube-resync-period={{ .Values.kubeResyncPeriod }}"
          - "--azure-resync-period={{ .Values.azureKeyVaultResyncPeriod }}"
        ports:
          - name: http
            containerPort: {{ .Values.controller.service.internalHttpPort }}
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: {{ .Values.controller.service.internalHttpPort }}
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: {{ .Values.controller.service.internalHttpPort }}
        {{- if .Values.controller.securityContext }}
        securityContext:
          {{ toYaml .Values.controller.securityContext | nindent 10 }}
        {{- end }}
        {{- if .Values.controller.resources }}
        resources:
          {{ toYaml .Values.controller.resources | nindent 10 }}
        {{- end }}
        {{- if or $useCloudConfig .Values.controller.extraVolumeMounts }}
        volumeMounts:
          {{- if $useCloudConfig }}
          {{- if .Values.global.userDefinedMSI.enabled }}
          - name: azure-config
            mountPath: "{{ dir .Values.cloudConfig }}"
            readOnly: true
          {{- else }}
          - name: azure-config
            mountPath: "{{ .Values.cloudConfig }}"
            readOnly: true
          {{- end }}
          {{- end }}
          {{- if .Values.controller.extraVolumeMounts }}
          {{- toYaml .Values.controller.extraVolumeMounts | nindent 10 }}
          {{- end }}
        {{- end }}
      {{- if or $useCloudConfig .Values.controller.extraVolumes }}
      volumes:
      {{- if $useCloudConfig }}
      {{- if .Values.global.userDefinedMSI.enabled }}
      - name: azure-config
        configMap:
          defaultMode: 420
          items:
          - key: azure.json
            path: "{{ base .Values.cloudConfig }}"
          name: {{ template "akv2k8s.name" . }}-azureconfig
      {{- else }}
      - name: azure-config
        hostPath:
          path: "{{ .Values.cloudConfig }}"
          type: File
      {{- end }}
      {{- end }}
      {{- if .Values.controller.extraVolumes }}
      {{ toYaml .Values.controller.extraVolumes | nindent 6 }}
      {{- end }}
      {{- end }}
      {{- if .Values.controller.image.pullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.controller.image.pullSecret }}"
      {{- end }}
      {{- if .Values.controller.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.controller.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.tolerations }}
      tolerations:
        {{ toYaml .Values.controller.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.affinity }}
      affinity:
        {{ toYaml .Values.controller.affinity | nindent 8 }}
      {{- end }}
{{- end }}
