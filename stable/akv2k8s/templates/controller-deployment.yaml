{{- if .Values.controller.enabled -}}
{{- $dot := . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akv2k8s.controller.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "akv2k8s.controller.name" . }}
    helm.sh/chart: {{ template "akv2k8s.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: akv2k8s-controller
{{- if .Values.controller.labels }}
{{ toYaml .Values.controller.labels | indent 4 }}
{{- end}}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "akv2k8s.controller.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "akv2k8s.controller.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.controller.podLabels }}
{{ toYaml .Values.controller.podLabels | indent 8 }}
{{- end}}
    spec:
      serviceAccountName: {{ template "controller.serviceAccountName" . }}
      containers:
      - name: {{ .Values.controller.name }}
        image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        env:
        - name: AZURE_VAULT_NORMAL_POLL_INTERVALS
          value: "{{ .Values.controller.keyVault.polling.normalInterval }}"
        - name: AZURE_VAULT_EXCEPTION_POLL_INTERVALS
          value: "{{ .Values.controller.keyVault.polling.failureInterval }}"
        - name: AZURE_VAULT_MAX_FAILURE_ATTEMPTS
          value: "{{ .Values.controller.keyVault.polling.failureAttempts }}"
        - name: RUNNING_INSIDE_AZURE_AKS
          value: {{ .Values.runningInsideAzureAks | quote }}
        - name: CUSTOM_AUTH
          value: {{ .Values.controller.keyVault.customAuth.enabled | quote }}
        - name: LOG_LEVEL
          value: "{{ .Values.controller.logLevel }}"
        - name: LOG_FORMAT
          value: "{{ .Values.controller.logFormat }}"
    {{- if .Values.azureCertificate.enabled }}
        - name: AZURE_CERTIFICATE_PATH
          value: "{{ print .Values.azureCertificate.path  .Values.azureCertificate.key }}"
      {{- end }}
        {{- range $key, $value := .Values.global.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
        {{- range $key, $value := .Values.controller.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.controller.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
    {{- if not .Values.controller.keyVault.customAuth.enabled }}
        args:
          - "--cloudconfig={{ .Values.cloudConfig }}"
          # - "--version={{ .Values.controller.image.tag }}"
      {{- end }}
        volumeMounts:
    {{- if not .Values.controller.keyVault.customAuth.enabled }}
          - name: azure-config
            mountPath: "{{ .Values.cloudConfig }}"
            readOnly: true
      {{- end }}
    {{- if .Values.azureCertificate.enabled }}
          - name: akv2k8s-certificate
            mountPath: "{{ .Values.azureCertificate.path }}"
            readOnly: true
      {{- end }}
      volumes:
    {{- if not .Values.controller.keyVault.customAuth.enabled }}
      - name: azure-config
        hostPath:
          path: "{{ .Values.cloudConfig }}"
          type: File
      {{- end }}
    {{- if .Values.azureCertificate.enabled }}
      - name: akv2k8s-certificate
        secret:
          secretName: "{{ .Values.azureCertificate.secret }}"
          items:
          - key: "{{ .Values.azureCertificate.key }}"
            path: "{{ .Values.azureCertificate.key }}"
      {{- end }}
      {{- if .Values.controller.image.pullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.controller.image.pullSecret }}"
      {{- end }}
{{- end }}