{{- if .Values.env_injector.enabled -}}
{{- $dot := . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akv2k8s.envinjector.fullname" . }}-ca-bundle
  labels:
    app.kubernetes.io/name: {{ template "akv2k8s.envinjector.name" . }}
    helm.sh/chart: {{ template "akv2k8s.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: akv2k8s-ca-bundle
    {{- if .Values.env_injector.caBundleController.labels }}
    {{ toYaml .Values.env_injector.caBundleController.labels | nindent 4 }}
    {{- end}}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "akv2k8s.envinjector.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: akv2k8s-ca-bundle
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "akv2k8s.envinjector.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: akv2k8s-ca-bundle
        {{- if .Values.env_injector.caBundleController.podLabels }}
        {{ toYaml .Values.env_injector.caBundleController.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/env-injector-apiservice.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ template "envinjector.serviceAccountName" . }}
      containers:
        - name: ca-bundle-controller
          image: "{{ .Values.env_injector.caBundleController.image.repository }}:{{ .Values.env_injector.caBundleController.image.tag }}"
          imagePullPolicy: {{ .Values.env_injector.caBundleController.image.pullPolicy }}
          args:
            - "--cloudconfig={{ .Values.cloudConfig }}"
            # - "--version={{ .Values.env_injector.caBundleController.image.tag }}"
          env:
          - name: AKV_LABEL_NAME
            value: {{ .Values.env_injector.caBundleController.akvLabelName }}
          - name: AKV_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: AKV_SECRET_NAME
            value: {{ template "envinjector.servingCertificate" . }}
          - name: CA_FILE
            value: /var/ca-cert/ca.crt
          - name: CA_CONFIG_MAP_NAME
            value: {{ .Values.env_injector.caBundleController.configMapName }}
          - name: LOG_LEVEL
            value: {{ .Values.env_injector.caBundleController.logLevel | quote }}
          - name: LOG_FORMAT
            value: {{ .Values.env_injector.caBundleController.logFormat | quote }}
          {{- range $key, $value := .Values.global.env }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "akv2k8s.fullname" $dot }}-env
                key: {{ $key }}
          {{- end }}
          {{- range $key, $value := .Values.env_injector.caBundleController.env }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "akv2k8s.envinjector.fullname" $dot }}-cabundlecontroller-env
                key: {{ $key }}
          {{- end }}
          volumeMounts:
          - mountPath: /var/ca-cert
            name: ca-cert
          {{- if .Values.controller.resources }}
          resources:
            {{ toYaml .Values.env_injector.caBundleController.resources | nindent 12 }}
          {{- end }}
      volumes:
      - name: ca-cert
        secret:
          defaultMode: 420
          secretName: {{ template "envinjector.servingCertificate" . }}
      {{- if .Values.env_injector.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.env_injector.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.env_injector.tolerations }}
      tolerations:
        {{ toYaml .Values.env_injector.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.env_injector.affinity }}
      affinity:
        {{ toYaml .Values.env_injector.affinity | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akv2k8s.envinjector.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "akv2k8s.envinjector.name" . }}
    helm.sh/chart: {{ template "akv2k8s.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "envinjector.webhook.component" . }}
    {{- if .Values.env_injector.webhook.labels }}
    {{ toYaml .Values.env_injector.webhook.labels | nindent 4 }}
    {{- end}}
spec:
  replicas: {{ .Values.env_injector.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "akv2k8s.envinjector.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: {{ template "envinjector.webhook.component" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "akv2k8s.envinjector.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: {{ template "envinjector.webhook.component" . }}
        {{- if .Values.env_injector.webhook.podLabels }}
        {{ toYaml .Values.env_injector.webhook.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/env-injector-apiservice.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ template "envinjector.serviceAccountName" . }}
      containers:
        - name: webhook
          image: "{{ .Values.env_injector.image.repository }}:{{ .Values.env_injector.image.tag }}"
          imagePullPolicy: {{ .Values.env_injector.image.pullPolicy }}
          args:
            - "--version={{ .Values.env_injector.image.tag }}"
            - "--versionEnvIage={{ .Values.env_injector.envImage.tag }}"
          env:
          - name: PORT
            value: {{ .Values.env_injector.service.internalTlsPort | quote }}
          - name: PORT_HTTP
            value: {{ .Values.env_injector.service.internalHttpPort | quote }}
          - name: RUNNING_INSIDE_AZURE_AKS
            value: {{ .Values.runningInsideAzureAks | quote }}
          - name: TLS_CERT_FILE
            value: /var/serving-cert/tls.crt
          - name: TLS_PRIVATE_KEY_FILE
            value: /var/serving-cert/tls.key
          - name: TLS_CA_FILE
            value: /var/serving-cert/ca.crt
          - name: WEBHOOK_AUTH_SERVICE
            value: {{ template "akv2k8s.envinjector.fullname" . }}
          - name: WEBHOOK_AUTH_SERVICE_PORT
            value: {{ .Values.env_injector.service.externalAuthServiceMutualTlsPort | quote }}
          - name: WEBHOOK_AUTH_SERVICE_PORT_INTERNAL
            value: {{ .Values.env_injector.service.internalAuthServiceMutualTlsPort | quote }}
          - name: CA_CONFIG_MAP_NAME
            value: {{ .Values.env_injector.caBundleController.configMapName }}
          - name: CUSTOM_AUTH
            value: {{ .Values.env_injector.keyVault.customAuth.enabled | quote }}
          - name: USE_AUTH_SERVICE
            value: {{ include "envinjector.useAuthService" . | quote }}
          - name: AZUREKEYVAULT_ENV_IMAGE
            value: {{ .Values.env_injector.envImage.repository }}:{{ .Values.env_injector.envImage.tag }}
          - name: CLOUD_CONFIG_HOST_PATH
            value: {{ .Values.cloudConfig }}
          - name: DOCKER_IMAGE_INSPECTION_TIMEOUT
            value: {{ .Values.env_injector.dockerImageInspection.timeout | quote }}
          - name: DOCKER_IMAGE_INSPECTION_USE_ACS_CREDENTIALS
            value: {{ .Values.env_injector.dockerImageInspection.useAksCredentialsWithACS | quote }}
          - name: LOG_LEVEL
            value: {{ .Values.env_injector.webhook.logLevel | quote }}
          - name: LOG_FORMAT
            value: {{ .Values.env_injector.webhook.logFormat | quote }}
          - name: METRICS_ENABLED
            value: {{ .Values.env_injector.metrics.enabled | quote }}
          {{- range $key, $value := .Values.global.env }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "akv2k8s.fullname" $dot }}-env
                key: {{ $key }}
          {{- end }}
          {{- range $key, $value := .Values.env_injector.webhook.env }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "akv2k8s.envinjector.fullname" $dot }}-webhook-env
                key: {{ $key }}
          {{- end }}
          ports:
          - name: webhook-tls
            containerPort: {{ .Values.env_injector.service.internalTlsPort }}
          - name: http
            containerPort: {{ .Values.env_injector.service.internalHttpPort }}
          - name: auth-service-mutual-tls
            containerPort: {{ .Values.env_injector.service.internalAuthServiceMutualTlsPort }}
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: {{ .Values.env_injector.service.internalTlsPort }}
          volumeMounts:
          - mountPath: /var/serving-cert
            name: serving-cert
          {{- if .Values.runningInsideAzureAks }}
          - mountPath: "{{ .Values.cloudConfig }}"
            name: azureconf
            readOnly: true
          {{- end }}
          securityContext:
            {{- if .Values.env_injector.webhook.securityContext }}
            {{ toYaml .Values.env_injector.webhook.securityContext | nindent 12 }}
            {{- end }}
          {{- if .Values.env_injector.resources }}
          resources:
            {{ toYaml .Values.env_injector.resources | nindent 12 }}
          {{- end }}
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: {{ template "envinjector.servingCertificate" . }}
      {{- if .Values.runningInsideAzureAks }}
      - name: azureconf
        hostPath:
          path: "{{ .Values.cloudConfig }}"
          type: File
      {{- end }}
      {{- if .Values.env_injector.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.env_injector.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.env_injector.tolerations }}
      tolerations:
        {{ toYaml .Values.env_injector.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.env_injector.affinity }}
      affinity:
        {{ toYaml .Values.env_injector.affinity | nindent 8 }}
      {{- end }}
{{- end }}
