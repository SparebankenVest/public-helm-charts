{{- if .Values.env_injector.enabled -}}
{{- $dot := . }}
{{- $keyVaultAuth := default .Values.global.keyVaultAuth .Values.env_injector.keyVaultAuth }}
{{- $useCloudConfig := eq $keyVaultAuth "azureCloudConfig" }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akv2k8s.envinjector.fullname" . }}
  labels:
    {{- include "akv2k8s.labels" . | nindent 4 }}
    {{- if .Values.env_injector.labels }}
    {{ toYaml .Values.env_injector.labels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.env_injector.replicaCount }}
  selector:
    matchLabels:
      {{- include "akv2k8s.selectors" . | nindent 6 }}
      {{- include "akv2k8s.components.webhook" . | nindent 6 }}
  {{- if .Values.env_injector.strategy }}
  strategy:
    {{- if eq .Values.env_injector.strategy.type "Recreate" }}
      type: "Recreate"
    {{- else if .Values.env_injector.strategy.rollingUpdate }}
    rollingUpdate:
    {{- toYaml .Values.env_injector.strategy.rollingUpdate | nindent 6 }}
    {{- end }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "akv2k8s.selectors" . | nindent 8 }}
        {{- include "akv2k8s.components.webhook" . | nindent 8 }}
        {{- if .Values.env_injector.podLabels }}
        {{ toYaml .Values.env_injector.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/env-injector-apiservice.yaml") . | sha256sum }}
        {{- if .Values.env_injector.podAnnotations }}
        {{ toYaml .Values.env_injector.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      automountServiceAccountToken: {{ .Values.env_injector.automountServiceAccountToken }}
      {{- if .Values.env_injector.podSecurityContext }}
      securityContext:
        {{ toYaml .Values.env_injector.podSecurityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "envinjector.serviceAccountName" . }}
      containers:
        - name: webhook
          image: "{{ .Values.env_injector.image.repository }}:{{ .Values.env_injector.image.tag }}"
          imagePullPolicy: {{ .Values.env_injector.image.pullPolicy }}
          args:
            - "--cloudconfig={{ .Values.cloudConfig }}"
            - "--version={{ .Values.env_injector.image.tag }}"
            - "--versionenvimage={{ .Values.env_injector.envImage.tag }}"
            - "--v={{ template "envinjector.logLevel" . }}"
            - "--logging-format={{ template "envinjector.logFormat" . }}"
          {{- if or .Values.global.envFromSecret .Values.env_injector.envFromSecret }}
          envFrom:
            {{- range $secretRef := .Values.env_injector.envFromSecret}}
            - secretRef:
                name: {{ $secretRef.name }}
            {{- end }}
            {{- range $secretRef := .Values.global.envFromSecret}}
            - secretRef:
                name: {{ $secretRef.name }}
            {{- end }}
          {{- end }}
          env:
          - name: HTTP_PORT
            value: {{ .Values.env_injector.service.internalHttpPort | quote }}
          - name: HTTP_PORT_EXTERNAL
            value: {{ .Values.env_injector.service.externalHttpPort | quote }}
          - name: TLS_PORT
            value: {{ .Values.env_injector.service.internalTlsPort | quote }}
          - name: TLS_PORT_EXTERNAL
            value: {{ .Values.env_injector.service.externalTlsPort | quote }}
          - name: MTLS_PORT
            value: {{ .Values.env_injector.service.internalMtlsPort | quote }}
          - name: MTLS_PORT_EXTERNAL
            value: {{ .Values.env_injector.service.externalMtlsPort | quote }}
          - name: TLS_CERT_DIR
            value: /var/serving-cert
          - name: CA_CERT_DIR
            value: /var/ca-cert
          - name: ENV_INJECTOR_EXEC_DIR
            value: /azure-keyvault/
          - name: WEBHOOK_AUTH_SERVICE
            value: {{ template "akv2k8s.envinjector.fullname" . }}
          - name: AUTH_TYPE
            value: {{ $keyVaultAuth }}
          - name: USE_AUTH_SERVICE
            value: {{ .Values.env_injector.authService | quote }}
          - name: AZUREKEYVAULT_ENV_IMAGE
            value: {{ .Values.env_injector.envImage.repository }}:{{ .Values.env_injector.envImage.tag }}
          - name: DOCKER_IMAGE_INSPECTION_TIMEOUT
            value: {{ .Values.env_injector.dockerImageInspection.timeout | quote }}
          - name: METRICS_ENABLED
            value: {{ default .Values.global.metrics.enabled .Values.env_injector.metrics.enabled | quote }}
          {{- range $key, $value := .Values.global.env }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "akv2k8s.fullname" $dot }}-env
                key: {{ $key }}
          {{- end }}
          {{- range $key, $value := .Values.env_injector.env }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "akv2k8s.envinjector.fullname" $dot }}-webhook-env
                key: {{ $key }}
          {{- end }}
          ports:
          - name: webhook-tls
            containerPort: {{ .Values.env_injector.service.internalTlsPort }}
          - name: http
            containerPort: {{ .Values.env_injector.service.internalHttpPort }}
          - name: auth-tls
            containerPort: {{ .Values.env_injector.service.internalMtlsPort }}
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: {{ .Values.env_injector.service.internalTlsPort }}
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: {{ .Values.env_injector.service.internalTlsPort }}
          volumeMounts:
          - mountPath: /var/serving-cert
            name: serving-cert
          {{- if .Values.env_injector.authService }}
          - mountPath: /var/ca-cert
            name: ca-cert
          {{- end }}
          {{- if and $useCloudConfig .Values.env_injector.authService }}
          {{- if .Values.global.userDefinedMSI.enabled }}
          - mountPath: "{{ dir .Values.cloudConfig }}"
            name: azureconf
            readOnly: true
          {{- else }}
          - mountPath: "{{ .Values.cloudConfig }}"
            name: azureconf
            readOnly: true
          {{- end }}
          {{- end }}
          {{- if .Values.env_injector.extraVolumeMounts }}
          {{- toYaml .Values.env_injector.extraVolumeMounts | nindent 10 }}
          {{- end }}
          {{- if .Values.env_injector.securityContext }}
          securityContext:
            {{ toYaml .Values.env_injector.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.env_injector.resources }}
          resources:
            {{ toYaml .Values.env_injector.resources | nindent 12 }}
          {{- end }}
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: {{ template "envinjector.servingCertificate" . }}
      {{- if .Values.env_injector.authService }}
      - name: ca-cert
        secret:
          defaultMode: 420
          secretName: {{ template "envinjector.rootCACertificate" . }}
      {{- end }}
      {{- if and $useCloudConfig .Values.env_injector.authService }}
      {{- if .Values.global.userDefinedMSI.enabled }}
      - name: azureconf
        configMap:
          defaultMode: 420
          items:
          - key: azure.json
            path: "{{ base .Values.cloudConfig }}"
          name: {{ template "akv2k8s.name" . }}-azureconfig
      {{- else }}
      - name: azureconf
        hostPath:
          path: "{{ .Values.cloudConfig }}"
          type: File
      {{- end }}
      {{- end }}
      {{- if .Values.env_injector.extraVolumes }}
      {{ toYaml .Values.env_injector.extraVolumes | nindent 6 }}
      {{- end }}
      {{- if .Values.env_injector.image.pullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.env_injector.image.pullSecret }}"
      {{- end }}
      {{- if .Values.env_injector.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.env_injector.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.env_injector.tolerations }}
      tolerations:
        {{ toYaml .Values.env_injector.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.env_injector.affinity }}
      affinity:
        {{ toYaml .Values.env_injector.affinity | nindent 8 }}
      {{- end }}
{{- end }}
