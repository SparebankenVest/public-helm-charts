# -- Name of Helm installation
name: akv2k8s

global:
  # -- Env vars to be used with all enabled pods, eg. for akv credentials
  env: {}
  # -- Reference to secret containing variables to be used with all enabled pods, eg. for akv credentials
  envFromSecret: []
  # -- - name: secret-name-1
  # -- - name: secret-name-2

  # -- Sets klog log level info=2, debug=4, trace=6
  logLevel: info
  # -- Sets klog log format text or json
  logFormat: text

  # -- azureCloudConfig (aks credentials) or environment (custom)
  keyVaultAuth: azureCloudConfig

  # To run as non-root, enable and define a custom MSI with access to AKV (keyVaultAuth must be set to 'azureCloudConfig')
  userDefinedMSI:
    # -- (bool) Enable usage of user-defined MSI for AKV authentication (for running pods as non-root)
    enabled: false
    # -- User-defined MSI object ID for AKV Authentication
    msi:
    # -- Azure subscription ID where the user-defined MSI for AKV Authentication resides
    subscriptionId:
    # -- Azure tenant ID where the user-defined MSI for AKV Authentication resides
    tenantId:
    # -- Azure cloud type (usually AzurePublicCloud)
    azureCloudType:

  metrics:
    # -- (bool) Enable prometheus metrics
    enabled: false
    serviceMonitor:
      # -- (bool) Enable service-monitor
      enabled: false
      # -- Scrape interval for service-monitor
      interval: 30s
      # -- Additional labels for service-monitor
      additionalLabels: {}

  rbac:
    # -- Specifies whether RBAC resources should be created
    create: true
    podSecurityPolicies: {}

# -- See https://github.com/Azure/aad-pod-identity/blob/master/docs/readmes/README.app-exception.md
addAzurePodIdentityException: false

# -- Path to cloud config on node (host path) or mounted configmap in pod
cloudConfig: /etc/kubernetes/azure.json

# -- Watch all namespaces, set to false to run in release namespace only
watchAllNamespaces: true

# -- Resync periods for the controller in seconds
azureKeyVaultResyncPeriod: 30
# -- Resync periods for the controller in seconds
kubeResyncPeriod: 30

controller:
  # -- Name
  name: controller
  # -- Whether to install the controller
  enabled: true

  image:
    # -- Image repository that contains the controller image
    repository: spvest/azure-keyvault-controller
    # -- Image tag
    tag: 1.7.0
    # -- Image pull policy for controller
    pullPolicy: IfNotPresent

  # -- Override global log level info=2, debug=4, trace=6
  logLevel: # info, debug, trace

  # -- Override global log format text or json
  logFormat: # text or json

  # -- Override global - azureCloudConfig (aks credentials), environment (custom)
  keyVaultAuth:

  serviceAccount:
    # -- Create service account for controller
    create: true
    # -- The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
    # -- Controller service account annotations
    annotations: {}
    # -- Controller service account labels
    labels: {}

  # -- Override global.rbac to create the controller rbac only
  rbac:
    # -- (bool) Override global.rbac.create
    create: # true/false

  # -- If set to `false`, must manually mount Kubernetes API credentials
  automountServiceAccountToken: true

  # -- Security context set on a pod level
  podSecurityContext:

  # -- Controller PriorityClass name
  priorityClassName: ""

  securityContext:
    # -- Must be `true` if using aks identity - can be set to false if userDefinedMSI is enabled, or Azure AD Pod Identity is used
    allowPrivilegeEscalation: true
    #   runAsUser: 65534

  service:
    type: ClusterIP
    # -- External metrics port
    externalHttpPort: 9000
    # -- Internal metrics port (set to larger than 1024 when running without privileges)
    internalHttpPort: 9000

  # Override metrics settings from global.metrics
  metrics:
    # -- (bool) Override global.metrics.enabled
    enabled: # true/false
    serviceMonitor:
      # -- (bool) Override global.metrics.serviceMonitor.enabled
      enabled: # true/false
      # -- (string) Override global.metrics.serviceMonitor.interval
      interval: # e.g. 30s
      # -- (object) Override global.metrics.serviceMonitor.additionalLabels
      additionalLabels:

  # -- Controller envs
  env: {}
  # Uncomment to use client-id / secret - see https://akv2k8s.io/security/authentication/#custom-authentication-options
  #   AZURE_TENANT_ID: <tenantId>
  #   AZURE_CLIENT_ID: <clientId>
  #   AZURE_CLIENT_SECRET: <clientSecret>

  # -- Reference to secret containing variables to be used with all enabled pods, eg. for akv credentials
  envFromSecret: []
  # - name: secret-name-1
  # - name: secret-name-2

  # -- Controller labels
  labels: {}
  # -- Controller pod labels
  podLabels: {}
  # -- Controller pod annotations
  podAnnotations: {}

  # See `kubectl explain Deployment.spec.strategy` for more
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy:
    # -- Controller rolling update strategy settings
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  # -- Controller resources
  resources: {}
  # -- Node selector for controller
  nodeSelector: {}
  # -- Tolerations for controller
  tolerations: []
  # -- Affinities for controller
  affinity: {}

  # -- Additional volumeMounts to the controller main container
  extraVolumeMounts: []
    # - name: akv2k8s-certificate
    #   mountPath: /etc/azure

  # -- Additional volumes to the controller pod
  extraVolumes: []
    # - name: akv2k8s-certificate
    #   secret:
    #     defaultMode: 420
    #     secretName: akv2k8s-certificate

env_injector:
  # -- Whether to install the env-injector
  enabled: true
  # -- Name
  name: env-injector

  # -- Override global - azureCloudConfig (aks credentials) or environment (custom)
  keyVaultAuth:

  # -- Set to false to provide azure key vault credentials locally (through e.g. env vars) in each pod
  authService: true

  image:
    # -- Image repository that contains the env-injector image
    repository: spvest/azure-keyvault-webhook
    # -- Image tag
    tag: 1.7.0
    # -- Image pull policy for env-injector
    pullPolicy: IfNotPresent

  # -- Number of env-injector replicas
  replicaCount: 2

  envImage:
    # -- Image repository that contains the vaultenv image
    repository: spvest/azure-keyvault-env
    # -- Image tag
    tag: 1.7.0
    # -- Image pull policy for vaultenv
    pullPolicy: IfNotPresent

  # -- Override global log level info=2, debug=4, trace=6
  logLevel: # info, debug, trace

  # -- Override global log format text or json
  logFormat: # text or json

  certificate:
    # -- Use cert-manager to handle webhook certificates,
    # if `false` and `env_injector.webhook.certificate.custom.enabled=false`
    # certificates and CA is generated by Helm
    useCertManager: false
    custom:
      # -- Use custom cert to handle webhook certificates,
      # if `false` and `env_injector.webhook.certificate.useCertManager=false`
      # certificates and CA is generated by Helm.
      enabled: false
      server:
        tls:
          # -- Custom TLS certificate, required when `env_injector.certificate.custom.enabled=true`
          crt:
          # -- Custom TLS key, required when `env_injector.certificate.custom.enabled=true`
          key:
      ca:
        # -- Custom CA certificate, required when `env_injector.certificate.custom.enabled=true`
        crt:

  # -- If set to `false`, must manually mount Kubernetes API credentials
  automountServiceAccountToken: true

  # -- Security context set on a pod level
  podSecurityContext:

  securityContext:
    # -- Must be `true` if using aks identity - can be set to false if userDefinedMSI is enabled, or Azure AD Pod Identity is used
    allowPrivilegeEscalation: true
  #   runAsUser: 65534

  namespaceLabelSelector:
    label:
      # -- Webhook will only trigger i namespaces with this label
      name: azure-key-vault-env-injection
      # -- Whether the namespace selector is enabled
      value: enabled

  dockerImageInspection:
    # -- Timeout in seconds
    timeout: 20

  service:
    type: ClusterIP
    # -- External webhook and health tls port
    externalTlsPort: 443
    # -- Internal webhook and health tls port (set to larger than 1024 when running without privileges)
    internalTlsPort: 8443
    # -- External metrics and health port
    externalHttpPort: 80
    # -- Internal metrics and health port (set to larger than 1024 when running without privileges)
    internalHttpPort: 8080
    # -- External auth service mtls port
    externalMtlsPort: 9443
    # -- Internal auth service mtls port (set to larger than 1024 when running without privileges)
    internalMtlsPort: 9443

  # Override metrics settings from global.metrics
  metrics:
    # -- (bool) Override global.metrics.enabled
    enabled: # true/false
    serviceMonitor:
      # -- (bool) Override global.metrics.serviceMonitor.enabled
      enabled: # true/false
      # -- (string) Override global.metrics.serviceMonitor.interval
      interval: # e.g. 30s
      # -- (object) Override global.metrics.serviceMonitor.additionalLabels
      additionalLabels:

  serviceAccount:
    # -- Create service account for env-injector
    create: true
    # -- The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
    # -- env-injector service account annotations
    annotations: {}
    # -- env-injector service account labels
    labels: {}

  # -- Override global.rbac to create the env_injector rbac only
  rbac:
    # -- (bool) Override global.rbac.create
    create: # true/false

  # -- Additional env vars to send to env-injector pods
  env: {}
  # Uncomment to use client-id / secret - see https://akv2k8s.io/security/authentication/#custom-authentication-options
  #   AZURE_TENANT_ID: <tenantId>
  #   AZURE_CLIENT_ID: <clientId>
  #   AZURE_CLIENT_SECRET: <clientSecret>

  # -- Reference to secret containing variables to be used with all enabled pods, eg. for akv credentials
  envFromSecret: []
  # - name: secret-name-1
  # - name: secret-name-2

  # -- Additional labels
  labels: {}
  # -- Additional pod labels
  podLabels: {}
  # -- Additional pod annotations
  podAnnotations: {}

  # See `kubectl explain poddisruptionbudget.spec` for more
  # ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  podDisruptionBudget:
    # -- Enable pod disruption budget
    enabled: true
    # -- Min available pods at any time
    minAvailable: 1
    # -- Max unavailable pods at any time
    maxUnavailable:

  # See `kubectl explain Deployment.spec.strategy` for more
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy:
    # -- Environment Injector rolling update strategy settings
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  # -- What will happen if the webhook fails? Ignore (continue) or Fail (prevent Pod from starting)?
  failurePolicy: Fail

  # https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-namespaceselector
  namespaceSelector:
    # Ignore namespaces
    matchExpressions:
    # -- Ignore kube-system namespace
    - key: name
      operator: NotIn
      values:
      - kube-system

  # -- Resources for env injector
  resources: {}
  # -- Node selector
  nodeSelector: {}
  # -- Tolerations
  tolerations: []
  # -- Affinities
  affinity: {}

  # -- Additional volumeMounts to the env-injector main container
  extraVolumeMounts: []
    # - name: akv2k8s-certificate
    #   mountPath: /etc/azure

  # -- Additional volumes to the env-injector pod
  extraVolumes: []
    # - name: akv2k8s-certificate
    #   secret:
    #     defaultMode: 420
    #     secretName: akv2k8s-certificate

  # https://kubernetes.io/docs/reference/access-authn-authz/rbac/#referring-to-subjects
  rbacSubjects:
    # -- Include Group or ServiceAccount
    - kind: Group
      name: system:serviceaccounts
      apiGroup: rbac.authorization.k8s.io
